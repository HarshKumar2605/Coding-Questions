
/* BST Node
struct Node
{
	int key;
	struct Node *left, *right;
};
*/

// This function finds predecessor and successor of key in BST.
// It sets pre and suc as predecessor and successor respectively


void findPreSuc(Node* root, Node*& pre, Node*& suc, int key)
{

// Your code goes here
//if(pre)cout<<pre->key<<endl;
//if(suc)cout<<suc->key<<"445"<<endl;
if(root==NULL)
return;

if(root->key>key){
    suc=root;
    findPreSuc(root->left,pre,suc,key);
}

else if(root->key<key){
    pre=root;
    findPreSuc(root->right,pre,suc,key);
}

else if(root->key==key){
    Node* temp=root->left;
   if(temp){
       while(temp->right){
           temp=temp->right;
       }
       pre=temp;
   }
   temp=root->right;
   if(temp){
       while(temp->left){
           temp=temp->left;
       }
       suc=temp;
   }
   return;
}


}
